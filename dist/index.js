"use strict";function isObject(e){return!("object"!=typeof e||!e)&&e.constructor===Object}Object.defineProperty(exports,"__esModule",{value:!0});const e=["string","bigint","number","boolean"];function isPrimitive(t){return e.includes(typeof t)}function deepClone(e){if(null===e||isPrimitive(e))return e;if(Array.isArray(e)){const t=[];for(const n of e)t.push(deepClone(n));return t}if(isObject(e)){const t={};for(const[n,o]of Object.entries(e))t[n]=deepClone(o);return t}if(e instanceof Map){const t=new e.constructor;for(const[n,o]of e.entries())t.set(n,deepClone(o));return t}if(e instanceof Set){const t=new e.constructor;for(const n of e.values())t.add(deepClone(n));return t}return e}exports.deepClone=deepClone,exports.isObject=isObject,exports.isPrimitive=isPrimitive,exports.mergeDefault=function mergeDefault(e,t){if(!t)return deepClone(e);for(const[n,o]of Object.entries(e)){const e=Reflect.get(t,n);void 0===e?Reflect.set(t,n,deepClone(o)):isObject(e)&&Reflect.set(t,n,mergeDefault(null!=o?o:{},e))}return t};
//# sourceMappingURL=index.js.map
